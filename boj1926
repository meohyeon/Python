# bfs 알고리즘 
from collections import deque
n, k = map(int, input().split())
grp = []
for i in range(n):
    grp.append(list(map(int,input().split())))

dx = [-1, 1, 0 ,0]
dy = [0, 0, 1, -1]

count = 0
mx = 0


visit = [[0 for x in range(502)]for y in range(502)]


for i in range(n):
    for j in range(k):

        if visit[i][j] == 1 or grp[i][j] == 0:
            continue
        
        count += 1
        que = deque()
        que.append((i,j))
        cnt = 0
        visit[i][j] = 1
        while que:
            cnt += 1
            b, c = que.popleft()
            for a in range(4):
                bx = b + dx[a]
                by = c + dy[a]
                if bx < 0 or bx >= n or by < 0 or by >= k:
                    continue
                if visit[bx][by] == 1 or grp[bx][by] == 0:
                    continue
                visit[bx][by] = 1
                que.append((bx,by))
        mx = max(mx,cnt) 

print(count)
print(mx)
